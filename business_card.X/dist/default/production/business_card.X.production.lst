

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jul 02 20:51:41 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC12F1822 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001C                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  008C                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  010C                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011D                     	;# 
    98  011D                     	;# 
    99  018C                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  0211                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0212                     	;# 
   125  0213                     	;# 
   126  0213                     	;# 
   127  0214                     	;# 
   128  0214                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0216                     	;# 
   133  0216                     	;# 
   134  0217                     	;# 
   135  0217                     	;# 
   136  0291                     	;# 
   137  0291                     	;# 
   138  0292                     	;# 
   139  0293                     	;# 
   140  0294                     	;# 
   141  0295                     	;# 
   142  0295                     	;# 
   143  0296                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  039A                     	;# 
   148  039C                     	;# 
   149  039D                     	;# 
   150  039E                     	;# 
   151  039F                     	;# 
   152  0FE4                     	;# 
   153  0FE5                     	;# 
   154  0FE6                     	;# 
   155  0FE7                     	;# 
   156  0FE8                     	;# 
   157  0FE9                     	;# 
   158  0FEA                     	;# 
   159  0FEB                     	;# 
   160  0FED                     	;# 
   161  0FEE                     	;# 
   162  0FEF                     	;# 
   163                           
   164                           	psect	stringtext1
   165  00A2                     __pstringtext1:	
   166  00A2                     main@PIN_LOW:	
   167  00A2  3401               	retlw	1
   168  00A3  3400               	retlw	0
   169  00A4  3402               	retlw	2
   170  00A5  3401               	retlw	1
   171  00A6  3405               	retlw	5
   172  00A7  3402               	retlw	2
   173  00A8  3405               	retlw	5
   174  00A9  3401               	retlw	1
   175  00AA  3402               	retlw	2
   176  00AB  3400               	retlw	0
   177  00AC  3400               	retlw	0
   178  00AD                     __end_ofmain@PIN_LOW:	
   179                           
   180                           	psect	stringtext2
   181  00AD                     __pstringtext2:	
   182  00AD                     main@PIN_HIGH:	
   183  00AD  3400               	retlw	0
   184  00AE  3401               	retlw	1
   185  00AF  3401               	retlw	1
   186  00B0  3402               	retlw	2
   187  00B1  3402               	retlw	2
   188  00B2  3405               	retlw	5
   189  00B3  3401               	retlw	1
   190  00B4  3405               	retlw	5
   191  00B5  3400               	retlw	0
   192  00B6  3402               	retlw	2
   193  00B7  3407               	retlw	7
   194  00B8                     __end_ofmain@PIN_HIGH:	
   195  000B                     _INTCON	set	11
   196  000C                     _PORTA	set	12
   197  005A                     _T0IF	set	90
   198  005D                     _T0IE	set	93
   199  0095                     _OPTION_REG	set	149
   200  008C                     _TRISA	set	140
   201  009D                     _ADCON0	set	157
   202  0099                     _OSCCON	set	153
   203  018C                     _ANSELA	set	396
   204  020C                     _WPUA	set	524
   205                           
   206                           ; #config settings
   207  0000                     
   208                           	psect	cinit
   209  0021                     start_initialization:	
   210  0021                     __initialization:	
   211                           
   212                           ; Clear objects allocated to COMMON
   213  0021  01F8               	clrf	__pbssCOMMON& (0+127)
   214  0022  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   215  0023  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   216  0024  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   217  0025                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220  0025                     __end_of__initialization:	
   221  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   222  0026  0020               	movlb	0
   223  0027  2828               	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMMON
   226  0078                     __pbssCOMMON:	
   227  0078                     _j:	
   228  0078                     	ds	2
   229  007A                     _number:	
   230  007A                     	ds	2
   231                           
   232                           	psect	cstackCOMMON
   233  0070                     __pcstackCOMMON:	
   234  0070                     ?_isr:	
   235  0070                     ??_isr:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 1 bytes @ 0x0
   243  0070                     	ds	1
   244  0071                     ??_main:	
   245                           
   246                           ; 1 bytes @ 0x1
   247  0071                     	ds	3
   248  0074                     main@bitOn:	
   249                           
   250                           ; 2 bytes @ 0x4
   251  0074                     	ds	2
   252  0076                     main@i:	
   253                           
   254                           ; 2 bytes @ 0x6
   255  0076                     	ds	2
   256                           
   257                           	psect	maintext
   258  0028                     __pmaintext:	
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 38 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  bitOn           2    4[COMMON] int 
   269 ;;  i               2    6[COMMON] int 
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   274 ;; Tracked objects:
   275 ;;		On entry : B1F/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1
   279 ;;      Params:         0       0       0
   280 ;;      Locals:         4       0       0
   281 ;;      Temps:          3       0       0
   282 ;;      Totals:         7       0       0
   283 ;;Total ram usage:        7 bytes
   284 ;; Hardware stack levels required when called:    1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _main
   294  0028                     _main:	
   295                           
   296                           ;main.c: 39: OSCCON = 0xF0;
   297                           
   298                           ;incstack = 0
   299                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   300  0028  30F0               	movlw	240
   301  0029  0021               	movlb	1	; select bank1
   302  002A  0099               	movwf	25	;volatile
   303                           
   304                           ;main.c: 40: ANSELA = 0;
   305  002B  0023               	movlb	3	; select bank3
   306  002C  018C               	clrf	12	;volatile
   307                           
   308                           ;main.c: 41: ADCON0 = 0;
   309  002D  0021               	movlb	1	; select bank1
   310  002E  019D               	clrf	29	;volatile
   311                           
   312                           ;main.c: 42: TRISA = (1<<3)|(1<<4);
   313  002F  3018               	movlw	24
   314  0030  008C               	movwf	12	;volatile
   315                           
   316                           ;main.c: 43: PORTA = 0;
   317  0031  0020               	movlb	0	; select bank0
   318  0032  018C               	clrf	12	;volatile
   319                           
   320                           ;main.c: 44: WPUA = 0;
   321  0033  0024               	movlb	4	; select bank4
   322  0034  018C               	clrf	12	;volatile
   323                           
   324                           ;main.c: 46: static const unsigned char PIN_HIGH[11] = {0,1,1,2,2,5,1,5,0,2,7};
   325                           ;main.c: 47: static const unsigned char PIN_LOW[11] = {1,0,2,1,5,2,5,1,2,0,0};
   326                           ;main.c: 52: OPTION_REG=0b10000111;
   327  0035  3087               	movlw	135
   328  0036  0021               	movlb	1	; select bank1
   329  0037  0095               	movwf	21	;volatile
   330                           
   331                           ;main.c: 53: INTCON=0b10100000;
   332  0038  30A0               	movlw	160
   333  0039  008B               	movwf	11	;volatile
   334  003A                     l532:	
   335                           ;main.c: 57: while(1)
   336                           
   337                           
   338                           ;main.c: 58: {
   339                           ;main.c: 60: for(int i = 0; i <= 7; i++)
   340  003A  01F6               	clrf	main@i
   341  003B  01F7               	clrf	main@i+1
   342  003C                     L2:	
   343  003C  0877               	movf	main@i+1,w
   344  003D  3A80               	xorlw	128
   345  003E  00F1               	movwf	??_main
   346  003F  3080               	movlw	128
   347  0040  0271               	subwf	??_main,w
   348  0041  3008               	movlw	8
   349  0042  1903               	btfsc	3,2
   350  0043  0276               	subwf	main@i,w
   351  0044  1803               	btfsc	3,0
   352  0045  283A               	goto	l532
   353                           
   354                           ;main.c: 61: {
   355                           ;main.c: 62: int bitOn = ((number >> i) & 1);
   356  0046  0A76               	incf	main@i,w
   357  0047  00F1               	movwf	??_main
   358  0048  087B               	movf	_number+1,w	;volatile
   359  0049  00F3               	movwf	??_main+2
   360  004A  087A               	movf	_number,w	;volatile
   361  004B  00F2               	movwf	??_main+1
   362  004C  2850               	goto	u54
   363  004D                     u55:	
   364  004D  0D73               	rlf	??_main+2,w
   365  004E  0CF3               	rrf	??_main+2,f
   366  004F  0CF2               	rrf	??_main+1,f
   367  0050                     u54:	
   368  0050  0BF1               	decfsz	??_main,f
   369  0051  284D               	goto	u55
   370  0052  3001               	movlw	1
   371  0053  0572               	andwf	??_main+1,w
   372  0054  00F4               	movwf	main@bitOn
   373  0055  3000               	movlw	0
   374  0056  0573               	andwf	??_main+2,w
   375  0057  00F5               	movwf	main@bitOn+1
   376                           
   377                           ;main.c: 63: PORTA = 0;
   378  0058  0020               	movlb	0	; select bank0
   379  0059  018C               	clrf	12	;volatile
   380                           
   381                           ;main.c: 64: if (bitOn)
   382  005A  0874               	movf	main@bitOn,w
   383  005B  0475               	iorwf	main@bitOn+1,w
   384  005C  1903               	btfsc	3,2
   385  005D  2896               	goto	l546
   386                           
   387                           ;main.c: 65: {
   388                           ;main.c: 66: TRISA = 0xFF & ~(1<<PIN_LOW[i]|1<<PIN_HIGH[i]);
   389  005E  3001               	movlw	1
   390  005F  00F1               	movwf	??_main
   391  0060  0877               	movf	main@i+1,w
   392  0061  0085               	movwf	5
   393  0062  0876               	movf	main@i,w
   394  0063  0084               	movwf	4
   395  0064  30AD               	movlw	low (main@PIN_HIGH| (0+32768))
   396  0065  0784               	addwf	4,f
   397  0066  3080               	movlw	high (main@PIN_HIGH| (0+32768))
   398  0067  3D85               	addwfc	5,f
   399  0068  0800               	movf	0,w	;code access
   400  0069  0A89               	incf	9,f
   401  006A  286C               	goto	u74
   402  006B                     u75:	
   403  006B  35F1               	lslf	??_main,f
   404  006C                     u74:	
   405  006C  0B89               	decfsz	9,f
   406  006D  286B               	goto	u75
   407  006E  3001               	movlw	1
   408  006F  00F2               	movwf	??_main+1
   409  0070  0877               	movf	main@i+1,w
   410  0071  0085               	movwf	5
   411  0072  0876               	movf	main@i,w
   412  0073  0084               	movwf	4
   413  0074  30A2               	movlw	low (main@PIN_LOW| (0+32768))
   414  0075  0784               	addwf	4,f
   415  0076  3080               	movlw	high (main@PIN_LOW| (0+32768))
   416  0077  3D85               	addwfc	5,f
   417  0078  0800               	movf	0,w	;code access
   418  0079  0A89               	incf	9,f
   419  007A  287C               	goto	u84
   420  007B                     u85:	
   421  007B  35F2               	lslf	??_main+1,f
   422  007C                     u84:	
   423  007C  0B89               	decfsz	9,f
   424  007D  287B               	goto	u85
   425  007E  0872               	movf	??_main+1,w
   426  007F  0471               	iorwf	??_main,w
   427  0080  3AFF               	xorlw	255
   428  0081  0021               	movlb	1	; select bank1
   429  0082  008C               	movwf	12	;volatile
   430                           
   431                           ;main.c: 67: PORTA = (1<<PIN_HIGH[i]);
   432  0083  3001               	movlw	1
   433  0084  00F1               	movwf	??_main
   434  0085  0877               	movf	main@i+1,w
   435  0086  0085               	movwf	5
   436  0087  0876               	movf	main@i,w
   437  0088  0084               	movwf	4
   438  0089  30AD               	movlw	low (main@PIN_HIGH| (0+32768))
   439  008A  0784               	addwf	4,f
   440  008B  3080               	movlw	high (main@PIN_HIGH| (0+32768))
   441  008C  3D85               	addwfc	5,f
   442  008D  0800               	movf	0,w	;code access
   443  008E  0A89               	incf	9,f
   444  008F  2891               	goto	u94
   445  0090                     u95:	
   446  0090  35F1               	lslf	??_main,f
   447  0091                     u94:	
   448  0091  0B89               	decfsz	9,f
   449  0092  2890               	goto	u95
   450  0093  0871               	movf	??_main,w
   451  0094  0020               	movlb	0	; select bank0
   452  0095  008C               	movwf	12	;volatile
   453  0096                     l546:	
   454                           
   455                           ;main.c: 68: }
   456                           ;main.c: 69: _delay((unsigned long)((1)*(40000000/4000.0)));
   457  0096  300D               	movlw	13
   458  0097  00F1               	movwf	??_main
   459  0098  30FC               	movlw	252
   460  0099                     u117:	
   461  0099  0B89               	decfsz	9,f
   462  009A  2899               	goto	u117
   463  009B  0BF1               	decfsz	??_main,f
   464  009C  2899               	goto	u117
   465  009D  3001               	movlw	1
   466  009E  07F6               	addwf	main@i,f
   467  009F  3000               	movlw	0
   468  00A0  3DF7               	addwfc	main@i+1,f
   469  00A1  283C               	goto	L2
   470  00A2                     __end_of_main:	
   471                           
   472                           	psect	intentry
   473  0004                     __pintentry:	
   474 ;; *************** function _isr *****************
   475 ;; Defined at:
   476 ;;		line 23 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1
   490 ;;      Params:         0       0       0
   491 ;;      Locals:         0       0       0
   492 ;;      Temps:          1       0       0
   493 ;;      Totals:         1       0       0
   494 ;;Total ram usage:        1 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		Interrupt level 1
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503  0004                     _isr:	
   504                           
   505                           ;incstack = 0
   506  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   507                           
   508                           ; Regs used in _isr: [wreg+status,2+status,0]
   509  0005  3180               	pagesel	$
   510  0006  0020               	movlb	0	; select bank0
   511  0007  087F               	movf	127,w
   512  0008  00F0               	movwf	??_isr
   513                           
   514                           ;main.c: 25: if((T0IE==1) && (T0IF==1))
   515  0009  1A8B               	btfsc	11,5	;volatile
   516  000A  1D0B               	btfss	11,2	;volatile
   517  000B  281C               	goto	i1l33
   518                           
   519                           ;main.c: 26: {
   520                           ;main.c: 27: T0IF = 0;
   521  000C  110B               	bcf	11,2	;volatile
   522                           
   523                           ;main.c: 28: j++;
   524  000D  3001               	movlw	1
   525  000E  07F8               	addwf	_j,f	;volatile
   526  000F  3000               	movlw	0
   527  0010  3DF9               	addwfc	_j+1,f	;volatile
   528                           
   529                           ;main.c: 30: if (j == 8)
   530  0011  3008               	movlw	8
   531  0012  0678               	xorwf	_j,w	;volatile
   532  0013  0479               	iorwf	_j+1,w	;volatile
   533  0014  1D03               	btfss	3,2
   534  0015  281C               	goto	i1l33
   535                           
   536                           ;main.c: 31: {
   537                           ;main.c: 32: j = 0;
   538  0016  01F8               	clrf	_j	;volatile
   539  0017  01F9               	clrf	_j+1	;volatile
   540                           
   541                           ;main.c: 33: number++;
   542  0018  3001               	movlw	1
   543  0019  07FA               	addwf	_number,f	;volatile
   544  001A  3000               	movlw	0
   545  001B  3DFB               	addwfc	_number+1,f	;volatile
   546  001C                     i1l33:	
   547  001C  0870               	movf	??_isr,w
   548  001D  00FF               	movwf	127
   549  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   550  001F  0009               	retfie
   551  0020                     __end_of_isr:	
   552  007E                     btemp	set	126	;btemp
   553  007E                     int$flags	set	126
   554  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    22
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     105
                                              1 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jul 02 20:51:41 2018

                      _j 0078                       u54 0050                       u55 004D  
                     u74 006C                       u75 006B                       u84 007C  
                     u85 007B                       u94 0091                       u95 0090  
                    l532 003A                      l546 0096                      u117 0099  
                    _isr 0004                      wreg 0009             __CFG_LVP$OFF 0000  
                   ?_isr 0070                     _T0IE 005D                     _T0IF 005A  
                   i1l33 001C                     _WPUA 020C                     _main 0028  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 0020                    ??_isr 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTA 000C  
                  _TRISA 008C                    main@i 0076                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0021  
           __end_of_main 00A2                   ??_main 0071                   _ADCON0 009D  
                 _ANSELA 018C                   _INTCON 000B                   _OSCCON 0099  
                 _number 007A  __end_of__initialization 0025           __pcstackCOMMON 0070  
             __pmaintext 0028               __pintentry 0004             __size_of_isr 001C  
   end_of_initialization 0025         __CFG_FOSC$INTOSC 0000      start_initialization 0021  
            __end_of_isr 0020              __pbssCOMMON 0078                ___latbits 0000  
   __end_ofmain@PIN_HIGH 00B8                main@bitOn 0074            __size_of_main 007A  
    __end_ofmain@PIN_LOW 00AD                 int$flags 007E                 intlevel1 0000  
          __pstringtext1 00A2            __pstringtext2 00AD               _OPTION_REG 0095  
           main@PIN_HIGH 00AD              main@PIN_LOW 00A2  
